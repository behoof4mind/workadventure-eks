on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: false
        default: 'warning'
      tags:
        required: false
        description: 'Test scenario tags'

name: Deploy app
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.8
      - uses: actions/checkout@v2
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Copy kube-config
        run: |-
          mkdir -p ~/.kube
          echo ${{ secrets.KUBE_CONFIG_DATA }} > ~/.kube/config
      - name: Setup helmfile
        uses: mamezou-tech/setup-helmfile@v0.8.0
      - name: Test
        run: |
          cat ~/.kube/config
          helmfile --version
          helm version
          kubectl version --client
          kubectl get ns
#      - uses: actions/github-script@0.9.0
#        env:
#          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          script: |
#            const output = `#### \`${{ steps.fmt.outcome }}\` Terraform Format and Style
#            #### \`${{ steps.init.outcome }}\` Terraform Initialization
#            #### Ô∏è\`${{ steps.validate.outcome }}\` Terraform Validation
#            #### \`${{ steps.plan.outcome }}\` Terraform Plan
#            #### Please check the service here: http://${{ fromJSON(steps.get_url.outputs.stdout) }}
#
#            <details><summary>Show Plan</summary>
#
#            \`\`\`${process.env.PLAN}\`\`\`
#
#            </details>
#
#            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
#
#            github.issues.createComment({
#              issue_number: context.issue.number,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: output
#            })
