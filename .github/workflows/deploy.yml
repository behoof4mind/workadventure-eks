on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: false
        default: 'warning'
      tags:
        required: false
        description: 'Test scenario tags'

name: Deploy app
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-2
    steps:
      - uses: actions/checkout@v2
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "MY_AWS_KEY"
          replace: ${{ secrets.AWS_ACCESS_KEY_ID }}
      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "MY_AWS_SECRET"
          replace: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Sync helmfile and app state
        uses: behoof4mind/helm-eks-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_BASE64 }}
        with:
          command: helmfile sync
#      - name: Sync helmfile and app state
#        uses: behoof4mind/helm-eks-action@master
#        env:
#          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
#        with:
#          command: helmfile sync
#      - uses: actions/github-script@0.9.0
#        env:
#          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          script: |
#            const output = `#### \`${{ steps.fmt.outcome }}\` Terraform Format and Style
#            #### \`${{ steps.init.outcome }}\` Terraform Initialization
#            #### Ô∏è\`${{ steps.validate.outcome }}\` Terraform Validation
#            #### \`${{ steps.plan.outcome }}\` Terraform Plan
#            #### Please check the service here: http://${{ fromJSON(steps.get_url.outputs.stdout) }}
#
#            <details><summary>Show Plan</summary>
#
#            \`\`\`${process.env.PLAN}\`\`\`
#
#            </details>
#
#            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
#
#            github.issues.createComment({
#              issue_number: context.issue.number,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: output
#            })
