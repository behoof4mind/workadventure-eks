on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: false
        default: 'warning'
      tags:
        required: false
        description: 'Test scenario tags'

name: Prepare EKS environment
jobs:
  applying-terrafrom:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-2
      BRANCH_NAME: ${{ github.head_ref }}
    steps:
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.8
      - uses: actions/checkout@v2
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        working-directory: ./terraform
        continue-on-error: true
      - name: Terraform Init
        id: init
        run: |
          terraform init \
          -backend-config="bucket=terraform-workadventure-state" \
          -backend-config="key=workadventure-terraform.tfstate" \
          -backend-config="dynamodb_table=terraform-workadventure-locks" \
          -backend-config="encrypt=true"
        working-directory: ./terraform
      - name: Terraform validate
        id: validate
        run: terraform validate
        working-directory: ./terraform
        continue-on-error: true
      - name: Terraform Plan
        id: plan
        run: terraform plan -out tf.plan
        working-directory: ./terraform
      - name: Terraform Apply
        id: apply
        run: terraform apply tf.plan
        working-directory: ./terraform
      - name: Terraform Output
        id: kubectl_config
        working-directory: ./terraform
        run: terraform output kubectl_config
